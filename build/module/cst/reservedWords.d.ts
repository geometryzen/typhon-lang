/**
 * TODO: Reserved for whom?
 */
export declare const reservedWords: {
    abstract: boolean;
    as: boolean;
    boolean: boolean;
    break: boolean;
    byte: boolean;
    case: boolean;
    catch: boolean;
    char: boolean;
    class: boolean;
    continue: boolean;
    const: boolean;
    debugger: boolean;
    default: boolean;
    delete: boolean;
    do: boolean;
    double: boolean;
    else: boolean;
    enum: boolean;
    export: boolean;
    extends: boolean;
    false: boolean;
    final: boolean;
    finally: boolean;
    float: boolean;
    for: boolean;
    function: boolean;
    goto: boolean;
    if: boolean;
    implements: boolean;
    import: boolean;
    in: boolean;
    instanceof: boolean;
    int: boolean;
    interface: boolean;
    is: boolean;
    long: boolean;
    namespace: boolean;
    native: boolean;
    new: boolean;
    null: boolean;
    package: boolean;
    private: boolean;
    protected: boolean;
    public: boolean;
    return: boolean;
    short: boolean;
    static: boolean;
    super: boolean;
    switch: boolean;
    synchronized: boolean;
    this: boolean;
    throw: boolean;
    throws: boolean;
    transient: boolean;
    true: boolean;
    try: boolean;
    typeof: boolean;
    use: boolean;
    var: boolean;
    void: boolean;
    volatile: boolean;
    while: boolean;
    with: boolean;
};
